services:
  mysql:
    container_name: mysql
    image: mysql:8
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/mysql-password)" --silent' ]
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - mysql-password
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backnet
    # 可公開放env_file， 需加密的 使用secrets管理，再從environment引入
    env_file:
      - mysql/.env
    environment:
       MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql-password
    ports:
      - '3306:3306'
  redis:
    container_name: redis
    image: hanksky123/sixjar-redis:v1.0.0
    build:
      context: redis
    networks:
      - backnet
    expose:
      - '6379'
    ports:
      - '6379:6379'
  web:
    container_name: web
    build:
      context: app
      target: builder
    image: hanksky123/sixjar-web:v1.0.0
    ports:
      - '8080:8080'
    networks:
      - backnet
    env_file:
      - app/app/.env
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      worker:
        condition: service_started
  worker:
    container_name: worker
    build:
      context: app
      target: builder
    image: hanksky123/sixjar-web:v1.0.0
    networks:
      - backnet
    env_file:
      - app/app/.env
    command:
      celery -A app worker -l info
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy

volumes:
  mysql-data:

secrets:
  mysql-password:
    file: mysql/password.txt
networks:
  backnet:
